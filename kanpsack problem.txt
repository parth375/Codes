//   KNAPSACK PROBLEM


//
#include <iostream>
#include<vector>
#include<algorithm>
using namespace std;

int  solve(int n,int c, int*wt,int *prices){
    if(n==0||c==0){
      return 0;
    }
    int ans=0;
    int inc=-1000;
    int exc=-1000;
    if(wt[n-1]<=c){
        inc=prices[n-1]+solve(n-1,c-wt[n-1],wt,prices);
    }
    exc=solve(n-1,c,wt,prices);
    
    ans=max(inc,exc);
    return ans;
   
}

int main()
{
    int n;
    cin>>n;
    
  int wt[n]={1,2,3,5};
    int prices[n]={40,20,30,100};
    
    int c;
    cin>>c;
    
    cout<<solve(n,c,wt,prices);
     

    return 0;
}
