/******************************************************************************

                  MERGE SORT

*******************************************************************************/

#include <iostream>
using namespace std;

void merge(int*arr, int s, int e){
    int mid=(s+e)/2;
    
    int len=(mid-s)+1;
    int len2= e-mid;
    
    int*first=new int[len];
    int*second=new int[len2];
    
    int k=s;
    for(int i=0;i<len;i++){
        first[i]=arr[k++]; //copying first half
    }
     k=mid+1;
    for(int i=0;i<len2;i++){
        second[i]=arr[k++];   //copying second half;
    }
    
    //merge two sorted array code 
    
    int in=0;
    int id=0;
    k=s;
    while(in<len && id<len2){
        if(first[in]<second[id]){
        arr[k++]=first[in];
        in++;
        }
        else{
        arr[k++]=second[id];
        id++;
    }
        }
        
        while(in<len){
            arr[k++]=first[in];
            in++;
        }
        while(id<len2){
            arr[k++]=second[id];
            id++;
        }
    }
    


void merge_sort(int*arr, int s, int e){
   if(s==e){
       return;
   }
   int mid=(s+e)/2;
   merge_sort(arr,s,mid);
   merge_sort(arr,mid + 1, e);
   
   merge(arr,s,e);
}

int main()
{
int n;
cin>>n;
int arr[n];

for(int i=0;i<n;i++){
    cin>>arr[i];
}

merge_sort(arr,0,n);
for(int i=0;i<n;i++){
    cout<<arr[i]<<" ";
}
    return 0;
    
    
}
